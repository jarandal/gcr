'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized

#If Silverlight Then
<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
System.Runtime.Serialization.DataContractAttribute(Name:="[Event]", [Namespace]:="http://schemas.datacontract.org/2004/07/Sonda.BPM.Model",[IsReference]:=True)>  _
Partial Public Class [Event]
#Else
<Serializable()>  _
<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
System.Runtime.Serialization.DataContractAttribute(Name:="[Event]", [Namespace]:="http://schemas.datacontract.org/2004/07/Sonda.BPM.Model",[IsReference]:=True)>  _
Partial Public Class [Event]
#End If
Implements System.ComponentModel.INotifyPropertyChanged
    #Region "Primitive Properties"
	Private _id As Long

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Id As Long
        Get
            Return _id
        End Get
        Set(ByVal value As Long)
			If (Object.ReferenceEquals(Me._id, value) <> True) Then
				_id = value
				Me.RaisePropertyChanged("Id")
            End If
		End Set
	End Property
	Private _type As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Type As String
        Get
            Return _type
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._type, value) <> True) Then
				_type = value
				Me.RaisePropertyChanged("Type")
            End If
		End Set
	End Property
	Private _date As Nullable(Of Date)

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property [Date] As Nullable(Of Date)
        Get
            Return _date
        End Get
        Set(ByVal value As Nullable(Of Date))
			If (Object.ReferenceEquals(Me._date, value) <> True) Then
				_date = value
				Me.RaisePropertyChanged("[Date]")
            End If
		End Set
	End Property
	Private _notes As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Notes As String
        Get
            Return _notes
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._notes, value) <> True) Then
				_notes = value
				Me.RaisePropertyChanged("Notes")
            End If
		End Set
	End Property
	Private _individual_Id As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Individual_Id As String
        Get
            Return _individual_Id
        End Get
        Set(ByVal value As String)
		If (Object.ReferenceEquals(Me._individual_Id, value) <> True) Then
            If Not Equals (_individual_Id, value) Then
                If Individual IsNot Nothing AndAlso Not Equals(Individual.Id, value) Then
                    Individual = Nothing
                End If
                _individual_Id = value
            End If
		Me.RaisePropertyChanged("Individual_Id")
        End If
        End Set
    End Property
    'Private _individual_Id As String
	Private _place As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Place As String
        Get
            Return _place
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._place, value) <> True) Then
				_place = value
				Me.RaisePropertyChanged("Place")
            End If
		End Set
	End Property

    #End Region

    #Region "Navigation Properties"
	<System.Runtime.Serialization.DataMemberAttribute()> _
    Public Overridable Property Individual As Individual
        Get
            Return _individual
        End Get
        Set(ByVal value As Individual)
            If _individual IsNot value Then
                Dim previousValue As Individual = _individual
                _individual = value
                FixupIndividual(previousValue)
            End If
        End Set
    End Property
    Private _individual As Individual

    #End Region

    #Region "Association Fixup"

    Private Sub FixupIndividual(ByVal previousValue As Individual)
        If previousValue IsNot Nothing AndAlso previousValue.Events.Contains(Me) Then
            previousValue.Events.Remove(Me)
        End If
        If Individual IsNot Nothing Then
            If Not Individual.Events.Contains(Me) Then
                Individual.Events.Add(Me)
            End If
            If Not Equals(Individual_Id, Individual.Id) Then
                Individual_Id = Individual.Id
            End If
        End If
    End Sub

    #End Region


    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub

End Class
