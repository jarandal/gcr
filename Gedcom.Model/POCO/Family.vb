'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized

#If Silverlight Then
<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
System.Runtime.Serialization.DataContractAttribute(Name:="Family", [Namespace]:="http://schemas.datacontract.org/2004/07/Sonda.BPM.Model",[IsReference]:=True)>  _
Partial Public Class Family
#Else
<Serializable()>  _
<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
System.Runtime.Serialization.DataContractAttribute(Name:="Family", [Namespace]:="http://schemas.datacontract.org/2004/07/Sonda.BPM.Model",[IsReference]:=True)>  _
Partial Public Class Family
#End If
Implements System.ComponentModel.INotifyPropertyChanged
    #Region "Primitive Properties"
	Private _id As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Id As String
        Get
            Return _id
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._id, value) <> True) Then
				_id = value
				Me.RaisePropertyChanged("Id")
            End If
		End Set
	End Property
	Private _notes As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Notes As String
        Get
            Return _notes
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._notes, value) <> True) Then
				_notes = value
				Me.RaisePropertyChanged("Notes")
            End If
		End Set
	End Property
	Private _notesSummary As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property NotesSummary As String
        Get
            Return _notesSummary
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._notesSummary, value) <> True) Then
				_notesSummary = value
				Me.RaisePropertyChanged("NotesSummary")
            End If
		End Set
	End Property
	Private _husband_Id As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Husband_Id As String
        Get
            Return _husband_Id
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._husband_Id, value) <> True) Then
				_husband_Id = value
				Me.RaisePropertyChanged("Husband_Id")
            End If
		End Set
	End Property
	Private _wife_Id As String

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property Wife_Id As String
        Get
            Return _wife_Id
        End Get
        Set(ByVal value As String)
			If (Object.ReferenceEquals(Me._wife_Id, value) <> True) Then
				_wife_Id = value
				Me.RaisePropertyChanged("Wife_Id")
            End If
		End Set
	End Property
	Private _date As Nullable(Of Date)

	<System.Runtime.Serialization.DataMemberAttribute()> _
Public Overridable Property [Date] As Nullable(Of Date)
        Get
            Return _date
        End Get
        Set(ByVal value As Nullable(Of Date))
			If (Object.ReferenceEquals(Me._date, value) <> True) Then
				_date = value
				Me.RaisePropertyChanged("[Date]")
            End If
		End Set
	End Property

    #End Region
    #Region "Navigation Properties"
	<System.Runtime.Serialization.DataMemberAttribute()> _
	Public Overridable Property Childrens As ObservableCollection(Of Individual)
        Get
            If _childrens Is Nothing Then
                Dim newCollection As New FixupCollection(Of Individual)
                AddHandler newCollection.CollectionChanged, AddressOf FixupChildrens
                _childrens = newCollection
            End If
            Return _childrens
        End Get
        Set(ByVal value As ObservableCollection(Of Individual))
            If _childrens IsNot value Then
                Dim previousValue As FixupCollection(Of Individual) = TryCast(_childrens, FixupCollection(Of Individual))
                If previousValue IsNot Nothing Then
                    RemoveHandler previousValue.CollectionChanged, AddressOf FixupChildrens
                End If
                _childrens = value
                Dim newValue As FixupCollection(Of Individual) = TryCast(value, FixupCollection(Of Individual))
                If newValue IsNot Nothing Then
                    AddHandler newValue.CollectionChanged, AddressOf FixupChildrens
                End If
            End If
        End Set
    End Property
    Private _childrens As ObservableCollection(Of Individual)

    #End Region
    #Region "Association Fixup"
    Private Sub FixupChildrens(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If e.NewItems IsNot Nothing Then
            For Each item As Individual In e.NewItems
                item.Family = Me
            Next
        End If
        If e.OldItems IsNot Nothing Then
            For Each item As Individual In e.OldItems
                If item.Family Is Me Then
                    item.Family = Nothing
                End If
            Next
        End If
    End Sub

    #End Region

    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub

End Class
